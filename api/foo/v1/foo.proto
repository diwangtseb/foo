syntax = "proto3";

package foo.v1;

import "google/api/annotations.proto";
import "errors/errors.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option go_package = "foo/api/foo/v1;v1";

enum ErrorReason {
	// 设置缺省错误码
	option (errors.default_code) = 500;

	// 为某个枚举单独设置错误码
	USER_NOT_FOUND = 0 [(errors.code) = 404];

	CONTENT_MISSING = 1 [(errors.code) = 400];

	UNKNOWN = 2 ;
}

service Foo {
	rpc CreateFoo (CreateFooRequest) returns (google.protobuf.Empty){
		option(google.api.http) = {
			get: "/create/foo/{name}"
		};
	}
	rpc UpdateFoo (UpdateFooRequest) returns (google.protobuf.Empty){
		option(google.api.http) = {
			put: "/update/foo",
			body: "*"
		};
	}
	rpc DeleteFoo (DeleteFooRequest) returns (google.protobuf.Empty);
	rpc GetFoo (GetFooRequest) returns (GetFooReply);
	rpc ListFoo (ListFooRequest) returns (ListFooReply);
}

message CreateFooRequest {
	string name = 1;
}
message FooBar{
	string name = 1;
	string describe = 2;
}
message UpdateFooRequest {
	FooBar foobar = 1;
	google.protobuf.FieldMask update_mask = 2;
}

message DeleteFooRequest {}

message GetFooRequest {}
message GetFooReply {}

message ListFooRequest {}
message ListFooReply {}